// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Invoice {
  id           String   @id @unique
  status       String   @default("draft")
  description  String?
  paymentTerms Int      @map("payment_terms")
  dueDate      DateTime @map("due_date")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  orders       Order[]
  sender       Sender[]
  clientEmail  String   @map("client_email")
  client       Client   @relation(fields: [clientEmail], references: [id])

  @@index(fields: [id], name: "id_invoice_idx")
  @@map("invoices")
}

model Sender {
  id       String    @id @default(cuid())
  street   String    @unique @default("19 Union Terrace")
  city     String    @default("London")
  postCode String    @default("E1 3EZ") @map("post_code")
  country  String    @default("United Kingdom")
  orders   Order[]
  clients  Client[]
  Invoices Invoice[]

  @@index(fields: [postCode], name: "id_sender_idx")
  @@map("senders")
}

model Client {
  id       String    @id @default(cuid())
  name     String
  email    String
  street   String
  city     String
  postCode String    @map("post_code")
  country  String
  orders   Order[]
  invoices Invoice[]
  sender   Sender?   @relation(fields: [senderId], references: [id])
  senderId String?   @map("sender_id")

  @@unique([name, email, street, city, postCode, country], name: "client_specs")
  @@index(fields: [id], name: "id_client_idx")
  @@map("clients")
}

model Order {
  id          String   @id @default(cuid())
  item        String   @map("item_name")
  quantity    Int      @map("item_quantity")
  price       Decimal  @map("item_price") @db.Decimal(18, 2)
  currency    String   @default("GBP")
  invoice     Invoice? @relation(fields: [invoiceId], references: [id])
  invoiceId   String?  @map("invoice_id")
  client      Client?  @relation(fields: [clientEmail], references: [id])
  clientEmail String?  @map("client_email")
  sender      Sender?  @relation(fields: [senderId], references: [id])
  senderId    String?  @map("sender_id")

  @@unique([invoiceId], name: "invoice_id")
  @@index(fields: [id], name: "id_order_idx")
  @@map("orders")
}
